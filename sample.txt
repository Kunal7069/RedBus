import React from 'react';
import { SafeAreaView } from 'react-native';
import MobileAuth from './android/app/src/MobileAuth';

const App = () => {
  return (
    <SafeAreaView style={{ flex: 1 }}>
      <MobileAuth />
    </SafeAreaView>
  );
};

export default App;



import { StatusBar } from "expo-status-bar";
import React from "react";
import { NavigationContainer } from "@react-navigation/native";
import { createNativeStackNavigator } from "@react-navigation/native-stack";
import get_started from "./src/screen/get_started";
import login from "./src/screen/login";
import verify_otp from "./src/screen/verify_otp";
import create_account from "./src/screen/create_account";
import home from "./src/screen/home";
const Stack = createNativeStackNavigator();

export default function App() {
  return (
  
    <NavigationContainer>
      <Stack.Navigator
        initialRouteName="Home"
        screenOptions={{ headerShown: false }}
      >
        <Stack.Screen name="get_started" component={get_started} />
        <Stack.Screen name="login" component={login} />
        <Stack.Screen name="verify_otp" component={verify_otp} />
        <Stack.Screen name="create_account" component={create_account} />
        <Stack.Screen name="home" component={home} />
      </Stack.Navigator>
    </NavigationContainer>
    
  );
}




import React, { useState } from 'react';
import { View, TextInput, Button, Text, StyleSheet } from 'react-native';
import auth from '@react-native-firebase/auth';

const MobileAuth = () => {
  const [phoneNumber, setPhoneNumber] = useState('');
  const [code, setCode] = useState('');
  const [confirm, setConfirm] = useState(null);

  const signInWithPhoneNumber = async () => {
    try {
      const confirmation = await auth().signInWithPhoneNumber(phoneNumber);
      setConfirm(confirmation);
    } catch (error) {
      console.error('Error sending code:', error);
    }
  };

  const confirmCode = async () => {
    try {
      const result = await confirm.confirm(code);
      console.log('User signed in successfully!',result);
      // You can add further logic here, like navigating to a new screen
    } catch (error) {
      console.error('Invalid code:', error);
    }
  };

  if (!confirm) {
    return (
      <View style={styles.container}>
        <TextInput
          style={styles.input}
          placeholder="Phone Number (e.g., +1234567890)"
          value={phoneNumber}
          onChangeText={setPhoneNumber}
          keyboardType="phone-pad"
        />
        <Button title="Send Verification Code" onPress={signInWithPhoneNumber} />
      </View>
    );
  }

  return (
    <View style={styles.container}>
      <TextInput
        style={styles.input}
        placeholder="Verification Code"
        value={code}
        onChangeText={setCode}
        keyboardType="number-pad"
      />
      <Button title="Confirm Code" onPress={confirmCode} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    padding: 20,
  },
  input: {
    height: 40,
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 10,
    paddingHorizontal: 10,
  },
});

export default MobileAuth;